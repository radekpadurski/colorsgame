{"version":3,"sources":["constants.js","helpers/getRandomColor.js","helpers/moveColors.js","helpers/deleteCells.js","helpers/generateBoardItems.js","helpers/getAdjacentCells.js","helpers/containsObject.js","helpers/checkAdjacentCells.js","helpers/generateNewBoardWithMoves.js","helpers/checkGameOver.js","reducers/index.js","store.js","components/atoms/Link.js","components/organisms/Menu.js","components/pages/MenuPage.js","components/atoms/NavigationWrapper.js","components/atoms/Cell.js","actions/index.js","components/molecules/Board.js","components/atoms/Score.js","components/organisms/Game.js","components/atoms/Button.js","components/atoms/Header.js","components/atoms/Input.js","components/atoms/BackButton.js","components/molecules/NewHighScore.js","components/pages/GamePage.js","components/organisms/Settings.js","components/pages/SettingsPage.js","components/organisms/HighScoreTabele.js","components/pages/HighScorePage.js","routes/index.js","index.js"],"names":["COLORS","getRandomColor","level","Math","floor","random","moveColors","column","movedColors","filteredColumn","filter","item","push","deleteCells","board","col","row","map","prevCol","prevColIndex","color","index","generateBoardItems","cols","rows","itemsCount","boardItems","Array","from","i","getAdjacentCells","data","undefined","containsObject","array","object","some","checkAdjacentCells","event","ColToCheck","RowToCheck","clicked","findCellsWithTheSameColorAdjacent","block","cellsWithTheSameColors","parseInt","target","dataset","this","cellsToDelete","length","shift","generateNewBoardWithMoves","newGameBoard","isAnyMoves","indexCol","indexRow","checkGameOver","isGameOver","initialSettings","lvl","boardItemsReducer","state","score","gameOver","lastColor","settings","highscorelist","action","type","payload","toDelete","newBoard","UpdateSettings","newSettings","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","StyledLink","styled","Link","NavContainer","div","NavItemWrapper","ul","NavItem","li","Nav","to","React","Component","MenuPage","StyledNavigationWrapper","StyledCell","props","Cell","dispatch","useDispatch","useSelector","data-col","data-row","onClick","changeBlocks","StyledBoard","ErrorInfo","p","Board","colIndex","rowIndex","StyledScore","h2","Score","App","StyledButton","button","Header1","h1","Header2","StyledInput","Field","handleClick","document","getElementById","click","BackButton","Button","id","StyledHighWrapper","StyledHighScore","StyledForm","Form","HiddenLink","connect","addItem","toString","substr","addItemAction","NavigationWrapper","initialValues","name","onSubmit","values","Input","placeholder","value","GamePage","Game","SettingsContainer","SettingsListWrapper","SettingsListItem","SettingsField","StyledButtonWrapper","changeSettings","NewSettings","component","className","SettingsPage","TabeleContainer","TabeleWrapper","ScoreTabeleHead","ScoreTableBody","ScoreTableCell","sortList","sort","a","b","Number","list","ScoreItem","HighScorePage","routes","routing","exact","path","render","ReactDOM"],"mappings":"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","file":"static/js/main.0ded4eea.chunk.js","sourcesContent":["export const COLORS =\n    [\n        \"purple\",\n        \"green\",\n        \"red\",\n        \"yellow\",\n        \"orange\",\n        \"lightCoral\",\n        \"palegoldenrod\",\n        \"violet\",\n        \"springgreen\",\n        \"slategray\",\n        \"aquamarine\",\n        \"cadetblue\",\n        \"chocolate\",\n        \"fuchsia\",\n        \"limegreen\",\n        \"darkturquoise\"\n    ]\n","import { COLORS } from \"./../constants\";\n\nconst getRandomColor = (level) => COLORS[Math.floor(Math.random() * level)]\n\nexport default getRandomColor;","import getRandomColor from \"./getRandomColor\";\n\nconst moveColors = (column, level) => {\n    const movedColors = []\n    const filteredColumn = column.filter(item => {\n        if (item === \"white\") {\n            movedColors.push(getRandomColor(level))\n            return false\n        }\n        return true\n    })\n    movedColors.push(...filteredColumn)\n\n    return movedColors\n}\n\nexport default moveColors;","const deleteCells = (board, col, row) => {\n    return board.map((prevCol, prevColIndex) => {\n        if (prevColIndex === col) {\n            return board[col].map((color, index) => index === row ? \"white\" : color)\n        }\n        return prevCol;\n    })\n}\n\nexport default deleteCells;","import getRandomColor from \"./getRandomColor\";\n\n\n\nconst generateBoardItems = (cols, rows, level) => {\n    const itemsCount = cols * rows;\n    const boardItems = Array.from(Array(cols), () => []);\n    for (let i = 0; i < itemsCount; i++) {\n        const color = getRandomColor(level);\n        const colIndex = [Math.floor(i / rows)];\n        boardItems[colIndex].push(color);\n    }\n    return boardItems\n}\n\nexport default generateBoardItems;","const getAdjacentCells = (data, col, row) => [\n    { col, row: row - 1, color: row === 0 ? undefined : data[col][row - 1] },\n    { col: col + 1, row, color: !data[col + 1] ? undefined : data[col + 1][row] },\n    { col, row: row + 1, color: data[col][row + 1] },\n    { col: col - 1, row, color: col === 0 ? undefined : data[col - 1][row] }\n]\n\nexport default getAdjacentCells;","const containsObject = (array, object) => array.some(item => item.col === object.col && item.row === object.row)\n\nexport default containsObject;","import getAdjacentCells from \"./getAdjacentCells\";\nimport containsObject from \"./containsObject\";\n\nconst checkAdjacentCells = (event, data, ColToCheck, RowToCheck) => {\n    let clicked = null;\n    if (event !== null) {\n        clicked = {\n            col: parseInt(event.target.dataset.col),\n            row: parseInt(event.target.dataset.row),\n            get color() {\n                return data[this.col][this.row]\n            },\n        };\n    }\n    else {\n        clicked = {\n            col: ColToCheck,\n            row: RowToCheck,\n            get color() {\n                return data[this.col][this.row]\n            },\n        };\n    }\n\n    const findCellsWithTheSameColorAdjacent = (col, row) => getAdjacentCells(data, col, row).filter(block => block.color === clicked.color)\n    let cellsWithTheSameColors = findCellsWithTheSameColorAdjacent(clicked.col, clicked.row)\n    const cellsToDelete = [{ ...clicked }]\n    while (cellsWithTheSameColors.length) {\n        findCellsWithTheSameColorAdjacent(cellsWithTheSameColors[0].col, cellsWithTheSameColors[0].row).map(item => {\n            if (!containsObject(cellsToDelete, item)) {\n                cellsWithTheSameColors.push(item)\n            }\n        })\n        if (!containsObject(cellsToDelete, cellsWithTheSameColors[0])) {\n            cellsToDelete.push(cellsWithTheSameColors[0])\n        }\n        cellsWithTheSameColors.shift()\n    }\n\n    return cellsToDelete\n}\n\nexport default checkAdjacentCells;","import generateBoardItems from \"./generateBoardItems\";\r\nimport checkAdjacentCells from \"./checkAdjacentCells\";\r\n\r\nconst generateNewBoardWithMoves = (cols, rows, level) => {\r\n    let newGameBoard = null;\r\n    let isAnyMoves = true;\r\n    while (isAnyMoves) {\r\n        newGameBoard = generateBoardItems(cols, rows, level)\r\n        isAnyMoves = true;\r\n        for (let indexCol = 0; indexCol < cols; indexCol++) {\r\n            for (let indexRow = 0; indexRow < rows; indexRow++) {\r\n                if (isAnyMoves) {\r\n                    if (checkAdjacentCells(null, newGameBoard, indexCol, indexRow).length > 1) {\r\n                        isAnyMoves = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return newGameBoard;\r\n}\r\n\r\nexport default generateNewBoardWithMoves;","import checkAdjacentCells from \"./checkAdjacentCells\";\r\n\r\nconst checkGameOver = (cols, rows, board) => {\r\n    let isGameOver = true;\r\n    for (let indexCol = 0; indexCol < cols; indexCol++) {\r\n        for (let indexRow = 0; indexRow < rows; indexRow++) {\r\n            if (isGameOver) {\r\n                if (checkAdjacentCells(null, board, indexCol, indexRow).length > 1) {\r\n                    isGameOver = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return isGameOver;\r\n}\r\n\r\nexport default checkGameOver;","\r\nimport moveColors from \"./../helpers/moveColors\";\r\nimport deleteCells from \"./../helpers/deleteCells\";\r\nimport generateNewBoardWithMoves from \"./../helpers/generateNewBoardWithMoves\";\r\nimport checkGameOver from \"./../helpers/checkGameOver\";\r\n\r\nconst initialSettings = {\r\n    rows: 5,\r\n    cols: 5,\r\n    lvl: 6,\r\n}\r\nconst boardItemsReducer = (\r\n    state = {\r\n        board: null,\r\n        score: 0,\r\n        gameOver: false,\r\n        lastColor: \"white\",\r\n        settings: initialSettings,\r\n        highscorelist: [],\r\n    },\r\n    action) => {\r\n    switch (action.type) {\r\n        case \"GIVE_UP\":\r\n            return {\r\n                ...state,\r\n                gameOver: true,\r\n            }\r\n        case \"NEW_GAME\":\r\n            return {\r\n                ...state,\r\n                board: generateNewBoardWithMoves(state.settings.cols, state.settings.rows, state.settings.lvl),\r\n                score: 0,\r\n                gameOver: false,\r\n                lastColor: \"white\",\r\n            }\r\n        case \"CLICK_HANDLED\":\r\n            // generate changed board after click\r\n            action.payload.toDelete.map(item => state.board = deleteCells(state.board, item.col, item.row));\r\n            const newBoard = state.board.map(column => moveColors(column, state.settings.lvl));\r\n\r\n            return {\r\n                ...state,\r\n                board: newBoard,\r\n                score: state.score + action.payload.toDelete.length,\r\n                lastColor: action.payload.toDelete[0].color,\r\n                gameOver: checkGameOver(state.settings.cols, state.settings.rows, newBoard),\r\n            }\r\n        case \"UPDATE_SETTINGS\":\r\n            const UpdateSettings = action.payload.newSettings;\r\n            return {\r\n                ...state,\r\n                settings: UpdateSettings,\r\n            }\r\n        case \"ADD_HIGHSCORE\":\r\n            return {\r\n                ...state,\r\n                gameOver: false,\r\n                highscorelist: [...state.highscorelist, action.payload],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default boardItemsReducer;","import { createStore } from \"redux\";\n\nimport reducer from \"./reducers\";\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store;","import styled from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StyledLink = styled(Link)`\r\n\r\nposition: relative;\r\n  display: block;\r\n  text-decoration: none;\r\n  font-size: 4rem;\r\n  color: black;\r\n  text-transform: uppercase;\r\n  padding: 4px 0;\r\n  transition: 0.5s;\r\n\r\n::after {\r\n  position: absolute;\r\n  content: \"\";\r\n  width: 100%;\r\n  height: 3px;\r\n  top: 100%;\r\n  left: 0;\r\n  background: #ff7000;\r\n  transition: transform 0.5s;\r\n  transform: scaleX(0);\r\n  transform-origin: right;\r\n}\r\n\r\n:hover {\r\n  color: #95a5a6;\r\n}\r\n\r\n:hover::after {\r\n  transform: scaleX(1);\r\n  transform-origin: left;\r\n}\r\n`\r\n\r\nexport default StyledLink;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport Link from \"./../atoms/Link\"\r\n\r\nconst NavContainer = styled.div`\r\ndisplay: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  background: white;\r\n`\r\n\r\nconst NavItemWrapper = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  list-style-type: none;\r\n`\r\n\r\nconst NavItem = styled.li`\r\npadding: 6px 0;\r\n\r\n`\r\n\r\n\r\n\r\nexport default class Nav extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <NavContainer>\r\n                    <NavItemWrapper>\r\n                        <NavItem>\r\n                            <Link to=\"/Game\">Game</Link>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <Link to=\"/HighScore\">HighScore</Link>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <Link to=\"/Settings\">Settings</Link>\r\n                        </NavItem>\r\n                    </NavItemWrapper>\r\n                </NavContainer>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Menu from '../organisms/Menu';\r\n\r\nfunction MenuPage() {\r\n    return (\r\n        <>\r\n            <Menu />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuPage;","import styled from \"styled-components\";\r\n\r\nconst StyledNavigationWrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  padding: 20px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  padding: 15px 50px 15px 50px;\r\n`\r\nexport default StyledNavigationWrapper;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeBlocks } from \"./../../actions\";\nimport checkAdjacentCells from \"./../../helpers/checkAdjacentCells\";\n\nconst StyledCell = styled.div`\n  width: 100px;\n  height: 100px;\n  cursor: pointer;\n  background-color: ${props => props.color};\n  padding:1px 1px;\n  margin:1px 1px;\n  transition: transform .2s;\n  grid-auto-flow: column;\n\n  &:hover {\n    border:3px solid;\n    border-color:#ff7000;\n    transform: scale(1.05);\n  }\n`\n\nconst Cell = ({ color, col, row }) => {\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.board)\n\n  const handleClick = event => {\n    const toDelete = checkAdjacentCells(event, data)\n    toDelete.length > 1 && dispatch(changeBlocks(toDelete))\n  }\n\n  return <StyledCell color={color} data-col={col} data-row={row} onClick={handleClick} />\n}\n\nexport default Cell;","export const changeBlocks = toDelete => ({\r\n    type: \"CLICK_HANDLED\",\r\n    payload: { toDelete }\r\n});\r\n\r\nexport const newGame = () => ({\r\n    type: \"NEW_GAME\",\r\n});\r\n\r\nexport const giveUp = () => ({\r\n    type: \"GIVE_UP\",\r\n});\r\n\r\nexport const changeSettings = newSettings => ({\r\n    type: \"UPDATE_SETTINGS\",\r\n    payload: { newSettings }\r\n});\r\n\r\nexport const addHighScore = (score) => {\r\n    const getId = () =>\r\n        `_${Math.random()\r\n            .toString(36)\r\n            .substr(2, 9)}`;\r\n    return {\r\n        type: \"ADD_HIGHSCORE\",\r\n        payload: {\r\n            id: getId(),\r\n            ...score\r\n        }\r\n    }\r\n};","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\nimport Cell from \"./../atoms/Cell\";\n\nconst StyledBoard = styled.div`\n  width: ${props => props.cols * 104}px;\n  height: ${props => props.rows * 104}px;\n  margin: 50px auto;\n  display:grid;\n  grid-auto-flow: column;\ngrid-template-columns: repeat(${props => props.cols}, auto);\ngrid-template-rows: repeat(${props => props.rows}, auto);\nborder:5px solid;\nborder-color: ${props => props.lastColor};\n`\n\nconst ErrorInfo = styled.p`\n  color: white;\n`\nconst Board = () => {\n    const data = useSelector(state => state.board)\n    const settings = useSelector(state => state.settings)\n    const lastColor = useSelector(state => state.lastColor)\n\n    return (\n        <StyledBoard cols={settings.cols} rows={settings.rows} lastColor={lastColor}>\n            {!!data ?\n                data.map((col, colIndex) => {\n                    return col.map((color, rowIndex) => {\n                        return <Cell key={`cell-${colIndex}-${rowIndex}`} color={color} col={colIndex} row={rowIndex} />\n                    })\n                })\n                :\n                <ErrorInfo>Please refresh page.</ErrorInfo>\n            }\n        </StyledBoard>\n    )\n}\n\nexport default Board;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\nconst StyledScore = styled.h2`\n  font-size: 3rem;\n  text-align: center;\n  margin-top: 10vh;\n`\nconst Score = () => {\n    const score = useSelector(state => state.score)\n    return <StyledScore>Your score: {score}</StyledScore>\n}\n\nexport default Score;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Board from \"./../molecules/Board\";\r\nimport Score from \"./../atoms/Score\";\r\nimport { newGame } from \"./../../actions\"\r\n\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n    dispatch(newGame());\r\n    return (\r\n        <>\r\n            <Score />\r\n            <Board />\r\n        </>);\r\n\r\n}\r\n\r\nexport default App;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\ncolor: black;\r\n  transition: 0.25s;\r\n  background: none;\r\n  border: 2px solid;\r\n  font: inherit;\r\n  line-height: 1;\r\n  margin: 0.5em auto;\r\n  padding: 1em 2em;\r\n  cursor: pointer;\r\n\r\n:hover , :focus{\r\n    border-color: #ff7000;\r\n    color: #fff;\r\n  box-shadow: inset 6.5em 0 0 0 #ff7000;\r\n}\r\n`\r\nexport default StyledButton;","import styled from \"styled-components\";\r\n\r\nexport const Header1 = styled.h1`\r\ncolor: #111;\r\n font-size: 5rem;\r\n  font-weight: bold;\r\n  letter-spacing: -1px;\r\n  line-height: 1;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Header2 = styled(Header1)`\r\n font-size: 3rem;\r\n`;\r\n\r\nexport default Header1;","import styled from \"styled-components\";\r\nimport { Field } from 'formik';\r\n\r\n\r\nconst StyledInput = styled(Field)`\r\nwidth: 200px;\r\nmargin: 0.5em auto;\r\npadding: 16px 28px;\r\nbackground-color: transparent;\r\ntransition: transform 250ms ease-in-out;\r\nline-height: 1;\r\ncolor: #ff7000;\r\nbackground-color: transparent;\r\nfont-size:15px;\r\n\r\n::placeholder {\r\n    color: color(#575756 a(0.8));\r\n    text-transform: uppercase;\r\n    letter-spacing: 1.5px;\r\n}\r\n\r\n:hover,\r\n:focus {\r\n    padding: 16px 29px;\r\n    outline: 0;\r\n    border: 1px solid transparent;\r\n    border-bottom: 1px solid #ff7000;\r\n    border-radius: 0;\r\n}\r\n`;\r\n\r\nexport default StyledInput;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from \"./Button\"\r\n\r\nconst StyledLink = styled(Link)`\r\ntext-decoration: none;\r\ncolor:black;\r\nwidth:100%;\r\nheight:100%;\r\n`;\r\n\r\nconst handleClick = () => {\r\n  document.getElementById('backbutton').click();\r\n}\r\n\r\nfunction BackButton() {\r\n  return (\r\n    <Button onClick={handleClick}>\r\n      <StyledLink id={\"backbutton\"} to=\"/\">BACK</StyledLink>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default BackButton;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Formik, Form } from 'formik';\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { addHighScore as addItemAction } from './../../actions';\r\nimport Button from \"./../atoms/Button\";\r\n\r\nimport { Header1, Header2 } from \"./../atoms/Header\";\r\nimport Input from \"./../atoms/Input\";\r\nimport NavigationWrapper from \"./../atoms/NavigationWrapper\";\r\nimport BackButton from \"./../atoms/BackButton\";\r\n\r\nconst StyledHighWrapper = styled.div`\r\nposition: relative;\r\ntop:35vh;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\nwidth:100%;\r\nflex-direction: column;\r\n`\r\n\r\nconst StyledHighScore = styled.div`\r\n`\r\n\r\nconst StyledForm = styled(Form)`\r\nmargin: 0 auto;\r\nwidth:400px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst HiddenLink = styled(Link)`\r\ndisplay:none!important;\r\n`;\r\n\r\n\r\nfunction NewHighScore({ addItem }) {\r\n    const score = useSelector(state => state.score)\r\n    return (\r\n        <>\r\n            <NavigationWrapper>\r\n                <BackButton />\r\n            </NavigationWrapper>\r\n            <StyledHighWrapper>\r\n                <StyledHighScore>\r\n                    <Header1>Congratulations,</Header1>\r\n                    <Header2>Your score is: {score}! enter name:</Header2>\r\n                    <Formik\r\n                        initialValues={{ name: '', score: '' + score }}\r\n                        onSubmit={values => {\r\n                            addItem(values);\r\n                            document.getElementById('gotohighscore').click()\r\n                        }}\r\n                    >\r\n                        {({ values }) => (\r\n                            <StyledForm>\r\n                                <Input placeholder=\"Your Name\" name=\"name\" value={values.name} />\r\n                                <Button type=\"submit\">OK</Button>\r\n                                <HiddenLink id={\"gotohighscore\"} to=\"/HighScore\"></HiddenLink>\r\n                            </StyledForm>)}\r\n                    </Formik>\r\n                </StyledHighScore>\r\n            </StyledHighWrapper>\r\n        </>);\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: (score) => dispatch(addItemAction(score)),\r\n});\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(NewHighScore);\r\n","import React from 'react';\r\nimport NavigationWrapper from \"./../atoms/NavigationWrapper\";\r\nimport Game from \"./../organisms/Game\";\r\nimport { giveUp } from \"./../../actions\"\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport NewHighScore from \"./../molecules/NewHighScore\";\r\nimport BackButton from \"./../atoms/BackButton\";\r\nimport Button from \"./../atoms/Button\";\r\n\r\nfunction GamePage() {\r\n    let isGameOver = useSelector(state => state.gameOver)\r\n    const dispatch = useDispatch();\r\n    const handleClick = () => {\r\n        dispatch(giveUp())\r\n    }\r\n    if (!isGameOver) {\r\n        return (\r\n            <>\r\n                <NavigationWrapper>\r\n                    <BackButton />\r\n                    <Button onClick={handleClick} to=\"/Game\">Give Up</Button>\r\n                </NavigationWrapper>\r\n                <Game />\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <NewHighScore />);\r\n    }\r\n}\r\n\r\nexport default GamePage;","import React from \"react\";\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\nimport { changeSettings as updateSettings } from '../../actions';\r\nimport Button from \"./../atoms/Button\"\r\nimport { Header2 } from \"./../atoms/Header\"\r\n\r\nconst SettingsContainer = styled.div`\r\ndisplay: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  background: white;\r\n`\r\n\r\nconst SettingsListWrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nlist-style-type: none;\r\n`\r\n\r\nconst SettingsListItem = styled.div`\r\nmargin:20px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst SettingsField = styled.div`\r\ndisplay:flex;\r\n\r\noption{\r\n    font-size:3rem;\r\n  border: none;\r\n  align-items: center;\r\n}\r\n\r\noption:active{\r\n}\r\n\r\nselect {\r\n    font-size:3rem;\r\n  align-items: center;\r\n  border: none;\r\ncolor:#ff7000;\r\n}\r\n\r\nselect::after {\r\n  border-color: #fff transparent transparent transparent;\r\n}\r\n`\r\nconst StyledButtonWrapper = styled.div`\r\nmargin-top:30px;\r\n`\r\n\r\n\r\n\r\n\r\nfunction Settings({ settings, changeSettings }) {\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={{ rows: settings.rows, cols: settings.cols, lvl: settings.lvl }}\r\n                onSubmit={\r\n                    values => {\r\n                        values.rows = parseInt(values.rows);\r\n                        values.cols = parseInt(values.cols);\r\n                        values.lvl = parseInt(values.lvl);\r\n                        changeSettings(values);\r\n                        document.getElementById('gotomenu').click()\r\n                    }}\r\n            >\r\n                {({ values }) => (\r\n                    <Form>\r\n                        <SettingsContainer>\r\n                            <SettingsListWrapper>\r\n                                <SettingsListItem>\r\n                                    <Header2>Number of rows:</Header2>\r\n                                    <SettingsField>\r\n                                        <Field name=\"rows\" component=\"select\" value={values.rows}>\r\n                                            <option value={3}>3</option>\r\n                                            <option value={4}>4</option>\r\n                                            <option value={5}>5</option>\r\n                                            <option value={6}>6</option>\r\n                                            <option value={7}>7</option>\r\n                                            <option value={8}>8</option>\r\n                                            <option value={9}>9</option>\r\n                                            <option value={10}>10</option>\r\n                                            <option value={11}>11</option>\r\n                                            <option value={12}>12</option>\r\n                                            <option value={13}>13</option>\r\n                                            <option value={14}>14</option>\r\n                                            <option value={15}>15</option>\r\n                                        </Field>\r\n                                    </SettingsField>\r\n                                </SettingsListItem>\r\n                                <SettingsListItem>\r\n                                    <Header2>Number of cols:</Header2>\r\n                                    <SettingsField>\r\n                                        <Field name=\"cols\" component=\"select\" value={values.cols} >\r\n                                            <option value={3}>3</option>\r\n                                            <option value={4}>4</option>\r\n                                            <option value={5}>5</option>\r\n                                            <option value={6}>6</option>\r\n                                            <option value={7}>7</option>\r\n                                            <option value={8}>8</option>\r\n                                            <option value={9}>9</option>\r\n                                            <option value={10}>10</option>\r\n                                            <option value={11}>11</option>\r\n                                            <option value={12}>12</option>\r\n                                            <option value={13}>13</option>\r\n                                            <option value={14}>14</option>\r\n                                            <option value={15}>15</option>\r\n                                        </Field>\r\n                                    </SettingsField>\r\n                                </SettingsListItem>\r\n                                <SettingsListItem>\r\n                                    <Header2>How many colors:</Header2>\r\n                                    <SettingsField>\r\n                                        <Field name=\"lvl\" component=\"select\" value={values.lvl}>\r\n                                            <option value={2}>2</option>\r\n                                            <option value={3}>3</option>\r\n                                            <option value={3}>4</option>\r\n                                            <option value={5}>5</option>\r\n                                            <option value={6}>6</option>\r\n                                            <option value={7}>7</option>\r\n                                            <option value={8}>8</option>\r\n                                            <option value={9}>9</option>\r\n                                            <option value={10}>10</option>\r\n                                            <option value={11}>11</option>\r\n                                            <option value={12}>12</option>\r\n                                            <option value={13}>13</option>\r\n                                            <option value={14}>14</option>\r\n                                            <option value={15}>15</option>\r\n                                        </Field>\r\n                                    </SettingsField>\r\n                                </SettingsListItem>\r\n                                <StyledButtonWrapper>\r\n                                    <Button type=\"submit\">Save</Button>\r\n                                    <Link id={\"gotomenu\"} className=\"hidden\" to=\"/\"></Link>\r\n                                </StyledButtonWrapper>\r\n                            </SettingsListWrapper>\r\n                        </SettingsContainer>\r\n                    </Form>)}\r\n            </Formik>\r\n        </>);\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeSettings: (NewSettings) => dispatch(updateSettings(NewSettings)),\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n    const { settings } = state;\r\n    return { settings: settings }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","import React from 'react';\r\nimport Settings from '../organisms/Settings';\r\nimport BackButton from '../atoms/BackButton';\r\nimport NavigationWrapper from '../atoms/NavigationWrapper';\r\n\r\nfunction SettingsPage() {\r\n    return (\r\n        <>\r\n            <NavigationWrapper>\r\n                <BackButton />\r\n            </NavigationWrapper>\r\n            <Settings />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SettingsPage;","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nconst TabeleContainer = styled.div`\r\ndisplay: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  background: white;\r\n`\r\n\r\nconst TabeleWrapper = styled.div`\r\ndisplay: table;\r\n`;\r\n\r\nconst ScoreTabeleHead = styled.div`\r\ndisplay: table-row;\r\nfont-weight: bold;\r\ntext-align: center;\r\nfont-size:3rem;\r\n`;\r\n\r\nconst ScoreTableBody = styled.div`\r\ndisplay: table-row;\r\nfont-size:2rem;\r\n`;\r\n\r\nconst ScoreTableCell = styled.div`\r\ndisplay: table-cell;\r\nborder: solid;\r\nborder-width: thin;\r\npadding-left: 5px;\r\npadding-right: 5px;\r\n`;\r\n\r\nfunction HighScoreTabele({ highscorelist }) {\r\n    let sortList = highscorelist.sort((a, b) => Number(b.score) - Number(a.score))\r\n    const list = (\r\n        <>\r\n            <ScoreTabeleHead>\r\n                <ScoreTableCell>Name:</ScoreTableCell>\r\n                <ScoreTableCell>Score:</ScoreTableCell>\r\n            </ScoreTabeleHead>\r\n            {sortList.map((ScoreItem) =>\r\n                <ScoreTableBody key={ScoreItem.id}>\r\n                    <ScoreTableCell>{ScoreItem.name}</ScoreTableCell>\r\n                    <ScoreTableCell>{ScoreItem.score}</ScoreTableCell>\r\n                </ScoreTableBody>\r\n            )}\r\n        </>\r\n    )\r\n    return (\r\n        <TabeleContainer>\r\n            <TabeleWrapper>\r\n                {list}\r\n            </TabeleWrapper>\r\n        </TabeleContainer>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ highscorelist }) => ({ highscorelist });\r\n\r\n\r\nexport default connect(mapStateToProps)(HighScoreTabele);\r\n","import React from 'react';\r\nimport BackButton from '../atoms/BackButton';\r\nimport NavigationWrapper from '../atoms/NavigationWrapper';\r\nimport HighScoreTabele from '../organisms/HighScoreTabele';\r\n\r\nfunction HighScorePage() {\r\n\r\n    return (\r\n        <>\r\n            <NavigationWrapper>\r\n                <BackButton />\r\n            </NavigationWrapper>\r\n            <HighScoreTabele />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HighScorePage;","export const routes = {\r\n    home: '/',\r\n    menu: '/menu',\r\n    game: '/game',\r\n    settings: '/settings',\r\n    highscore: '/highscore',\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from \"./store\";\nimport MenuPage from './components/pages/MenuPage'\nimport GamePage from './components/pages/GamePage'\nimport SettingsPage from './components/pages/SettingsPage'\nimport HighScorePage from './components/pages/HighScorePage'\nimport { Route, Switch, HashRouter as Router, Redirect } from 'react-router-dom'\nimport { routes } from './routes';\n\nconst routing = (\n    <Provider store={store}>\n        <Router >\n            <Route exact path={routes.home} render={() => <Redirect to=\"/menu\" />} />\n            <Route path={routes.menu} component={MenuPage} />\n            <Route path={routes.game} component={GamePage} />\n            <Route path={routes.settings} component={SettingsPage} />\n            <Route path={routes.highscore} component={HighScorePage} />\n        </Router>\n    </Provider>\n)\nReactDOM.render(routing, document.getElementById('root'));\n"],"sourceRoot":""}